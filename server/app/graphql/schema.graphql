
interface Node {
    _id: ID!
}

interface Payload {
    status: Boolean!
    error: Error
}

type Query {
    user(nickname: String!, email: String!): UserPayload
    getUsers: UsersPayload
}

type Mutation {
    registerLunch(nickname: String!, email: String!): UserPayload!
}

type User implements Node {
    _id: ID!
    nickname: String!
    email: String!
    registered_for_lunch: [Datetime]
}

type UserPayload implements Payload {
    status: Boolean!
    error: Error
    user: [User]
}

type Error {
    message: String
}

scalar Datetime